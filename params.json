{
  "name": "Radolan",
  "tagline": "",
  "body": "# radolan                                                                                       {#mainpage}\r\n\r\nThis is a C++ library for reading and working with the RADOLAN data format of \r\nthe German Weather Forecast Service (DWD). Also contains methods for converting \r\nto and from the RADOLAN coordinate system or grid, as well as conversion routines \r\ninto NetCDF and Shapefile.\r\n\r\nInformation \r\nhttps://git.meteo.uni-bonn.de/attachments/download/2/RADOLAN_RADVOR_OP_Komposit_format_pdf.pdf\r\n\r\n## Installation\r\n\r\n### Dependencies\r\n* boost\r\n* libz\r\n* hdf5\r\n* netcdf4 (C++ bindings included)\r\n* Shapelib (optional)\r\n\r\nUse your platform specific package managers to install those dependencies. \r\nCMake will look for the dependencies in the usual locations (/usr or /usr/local).\r\nIf you install dependencies in different locations, please consider the CMAKE\r\ndocumentation and adjust the file CMakeLists.txt accordingly.\r\n\r\n### Installation\r\n\r\n    git clone https://github.com/meteo-ubonn/radolan.git\r\n    cd radolan\r\n    cmake .\r\n    make install\r\n\r\n## Library and ececutables\r\n\r\nThe project produces a libradolan, which is installed to /usr/local/lib\r\ntogether with it's headers at /usr/local/include. In addition, the following\r\nexecutables are produced:\r\n\r\n### radolan2netcdf\r\nThis command converts a RADOLAN file into a NetCDF file following the \r\nCF-Metadata convention (v1.6). See here: http://cfconventions.org/\r\n\r\n### radolan2shapefile\r\nIf shapelib was detected during the cmake step, this executable is installed \r\nas well. It converts RADOLAN files into .shp files. You can choose between\r\npolygons (radar 'pixels' are actually polygons) or points (center of the radar\r\npixel) and with- or without the scan value.\r\n\r\n## How to use this\r\nThe following, simple example will read a radolan file, print out header information \r\nand a simple ASCII representation of the file to console:\r\n\r\n    #include <radolan/radolan.h>\r\n    #include <radolan/radolan_utils.h>\r\n    \r\n    using namespace Radolan;\r\n    \r\n    int main(int argc, char** argv)  {\r\n        RDScan* scan = RDAllocateScan();\r\n        if (RDReadScan(argv[1], scan, true)) {\r\n            RDPrintHeaderInformation(scan);\r\n            RDPrintScan(scan,20,20);\r\n            RDFreeScan(scan);\r\n        }\r\n    }\r\n\r\n## Source-code documentation\r\nA doxygen - generated documentation of all classes can be found here: <a href=\"doxygen/index.html\">Source documentation</a>",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}